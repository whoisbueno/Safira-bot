import { SlashCommandBuilder } from "../../Structures/Classes/SlashCommand";
import { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } from "discord.js";

export default new SlashCommandBuilder({
  name: "botinfo",
  description: "See a short description about me",
  async run({ client, interaction}) {
    
    const button = new ButtonBuilder().setStyle(ButtonStyle.Link).setEmoji("üìé").setLabel('Invite').setURL('https://discord.com/api/oauth2/authorize?client_id=1018594939451486228&permissions=139589845056&scope=bot%20applications.commands'); 
    const pag1 = new ButtonBuilder().setLabel("Machine").setEmoji("‚öô").setStyle(ButtonStyle.Secondary).setCustomId("pag1")
    const row = new ActionRowBuilder<ButtonBuilder>().addComponents([button, pag1]);

    interaction.reply({ embeds: [
      new EmbedBuilder()
      .setAuthor({ name: `Pequenas informa√ß√µes - Botinfo`, iconURL: client.user.displayAvatarURL()})
      .setDescription("üêã ‚Ä∫ Ol√°, meu nome √© Safira e eu sou uma bot para qualquer fun√ß√µes do seu servidor, **modera√ß√£o, m√∫sica** entre outras coisas\n\n‚öô ‚Ä∫ Eu fui feita usando a linguagem de programa√ß√£o <:typescript:1018858280715558922> [TypeScript](https://www.typescriptlang.org/), tendo como livraria <:djs:1018858321719078992> [Discord.js v14](https://discord.js.org/#/).\n\nüòç ‚Ä∫ Se voc√™ quiser me adicionar em seu servidor clique [aqui](https://discord.com/api/oauth2/authorize?client_id=1018594939451486228&permissions=139589845056&scope=bot%20applications.commands), agrade√ßo por todo apoio!")
      .addFields(
        {
          name: "üèÖ ‚Ä∫ Men√ß√µes Honrosas",
          value: `‚Ä¢ Obrigada \`${await client.users.fetch('465859183250767882').then(user => user.tag)} & ${await client.users.fetch('714598376137687050').then(user => user.tag)}\` pois me desenvolveram.\n‚Ä¢ Obrigada \`${interaction.user.tag}\` por me ajudar a crescer e por me usar no seu servidor :3`,
          inline: false
        }
      )
      .setFooter({ text: `Criada por: ${await client.users.fetch('465859183250767882').then(user => user.tag)} & ${await client.users.fetch('714598376137687050').then(user => user.tag)}`, iconURL: `${await client.users.fetch('465859183250767882').then(user => user.displayAvatarURL())}`})
       .setColor("#89b4fa")
    ]/*, components: [
      row
    ]*/})
    const filter1 = i => i.user.id === interaction.user.id;
	const collector1 = interaction.channel.createMessageComponentCollector({ filter: filter1, time: 20000 });

  collector1.on('collect', async (x) => {
    if (x.customId === 'pag1') {
      interaction.followUp({ content: `üõ∞ ‚Ä∫ Safira Rewrite TypeScript\n‚Ä∫ Github: [SafiraSource](https://github.com/whoisbueno/Safira-bot)\n‚Ä∫ Mem√≥ria Utilizada: \`${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)}MB\`\n‚Ä∫ Servidores: \`${client.guilds.cache.size}\`\n‚Ä∫ Criada em: \`${client.user.createdAt.toLocaleDateString('pt-BR')}\`\n‚Ä∫ Shards: \`2/2\`\n‚Ä∫ Ping: \`${client.ws.ping}\``, ephemeral: true})
    }
  })
  },
})